Random forest uses many trees and makes a prediction by averaging the predictions of each component tree.
Generally has better predictive accuracy than a single decision tree and works welll with default parameters.
If you keep modeling you can learn more models with even better performance, but many of those are sensitive to getting the right parameters.

To use a random forest. 
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error

forest_model = RandomForestRegressor(random_state=1)
forest_model.fit(train_X, train_y)
melb_preds = forest_model.predict(val_X)
print(mean_absolute_error(val_y, melb_preds))

